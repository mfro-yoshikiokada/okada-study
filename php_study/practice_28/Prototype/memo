Prototype パターンは、オブジェクトの生成に関するデザインパターン手法の１つで、インスタンスの複製に関する処理モデルです。プロトタイプ、つまりは「原型」。既にある型を利用して効率的にインスタンスを回していく手法になります。

Prototype パターンでは大まかに、プロトタイプとなるインスタンスを流用し、作成するオブジェクトのタイプを指定する事で原型となるインスタンスのコピーを行いますが、その際に自分自身を複製する事から、よく細胞に例えられたりします。

また、オブジェクトのコピーに関して、シャロー（浅い）コピーとディープ（深い）コピーを意識する必要があります。

ちなみになぜインスタンスを生成せずコピーするのか。例えば状態を持つインスタンスを複製したい場合、再度インスタンスを生成した場合はその後、複製したいインスタンスと同じ状態に持っていく処理が必要になりますが、それならばそもそもコピーした方が早く効率的です。ただし、その場合にコピーの性質を把握し複製を行う事、そして、ただ複製するのではなく、インスタンスや状態の取り回しを行うマネージャーを挟む事で、疎結合な関係を構築する事、そういったエッセンスが詰まっているのがこのパターンの特徴になります。

逆を言えば、状態を持たないものは複製する必要がないので、このパターンの採用はそぐわないという事になります